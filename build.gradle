buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
    }
}

apply plugin: 'forge'
apply plugin: 'maven-publish'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

sourceSets {
    api {}
}

version = "1.0.3"
group = "universalelectricity"
archivesBaseName = "icbm"

jar {
    manifest {
        attributes "FMLAT": "icbm_at.cfg"
    }
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"

    replaceIn "icbm/core/MainBase.java"
    replace "{VERSION}", project.version
}

repositories {
    maven { url = "https://maven.tilera.xyz" }
}

dependencies {
    implementation "universalelectricity:basiccomponents:2.0.0:deobf"
    implementation "universalelectricity:universalelectricity:5.1.0:deobf"
    implementation "universalelectricity:atomicscience:1.1.0:deobf"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    filesMatching('mcmod.info') {
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.archivesBaseName

            artifact deobfJar
            artifact sourcesJar
            artifact jar
        }
    }

    repositories {
        if (project.hasProperty('mvnURL')) {
                maven {
                    credentials {
                        username findProperty("mvnUsername")
                        password findProperty("mvnPassword")
                    }
                    url = findProperty("mvnURL")
                }
        }
        else {
                mavenLocal()
        }
    }
}